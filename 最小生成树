#include<stdio.h>
#include<algorithm>
using namespace std;
int tree[100];
struct Edge{
	int a,b;
	int cost;
	bool operator <(const Edge &a) const{
		return cost<a.cost;
	}
}edge[6000];
int findroot(int x)
{
	if(tree[x]==-1) return x;
	else
	{
		int t=findroot(tree[x]);
		tree[x]=t;
		return t;
	}
}
void main()
{
	int i,n;
	while(scanf("%d",&n)!=EOF&&n!=0)
	{
		for(i=0;i<n;i++) tree[i]=-1;
		for(i=0;i<(n-1)*n/2;i++)
		{
			scanf("%d%d%d",&edge[i].a,&edge[i].b,&edge[i].cost);
		}
		sort(edge,edge+(n-1)*n/2);
		int ans=0;
		for(i=0;i<(n-1)*n/2;i++)
		{
			int a=findroot(edge[i].a);
			int b=findroot(edge[i].b);
			if(a!=b) {
				ans+=edge[i].cost;
				tree[a]=b;
			}
		}
		printf("%d",ans);
	}
}
